When would you want to use a remote repository rather than keeping all your work
local?

    For instance if I work on a big project with many developers simultaneously all around the World.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If I work on a local master branch and somebody updated the remote repository, auto
   auto pull would make conflict on my local branch.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

 Forks: GitHUB feature. If you want to decouple your development from the original one
  you should choose this option.
 Clones: you can clone directly either from GitHUB or from your local repository. In this 
  case you may push back your development into the original branch.
 Branch: a set of commits which can be used for divide the deployment process, or try 
  something new concepts etc. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

	You remain up to date. There are less possible merging conflits. There would be 
	also less separated branches.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

	In a very hard way... :) Using Git and GitHub I can follow all modifications, 
	mod changes and the flow of the project. Without VCS the development process
	would be much harder because everybody must get informed at every logical change
	by another way (meeting, phone, e-mail etc). 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
